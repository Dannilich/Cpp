#include <iostream>
#include <fstream>

using namespace std;

struct Books //структура книги и книжного хранилища, структура как упрощенная модель какой-то вещи
{
    string name, authorSurname, authorInitials;
    int amount, price;
    Books* next = 0;

    //конструктор (метод, вызываемый при создании объекта, для того что бы прописать его создание)
    Books(string n, string an, string ai, int p, int am) {
        name = n;
        authorSurname = an;
        authorInitials = ai;
        price = p;
        amount = am;
    }

    /*
        Метод добавления:
            возвращает новый список книг, отсортированный уже на этапе добавления

        1) если первый элемент меньше новго, то мы присоединяем к новому список 
            (начинается с нового элемента)
        2)проходимся по списку, через указатель на последующий элемент,
            выходим из него если список книг закончился или новый элемент должен стоять на месте next
                - если закончился и не понадобилось вставлять его, добавляем в конец
                - иначе вставляем через указатели между текущим и next элементом
    */
    Books* dobavit(Books* b) {
        if (this->name > b->name)
        {
            b->next = this;
            return b;
        }

        Books* ptr = this;
        while (ptr->next != 0 && ptr->next->name < b->name)
        {
            ptr = ptr->next;
        }

        if (ptr->next != 0)
        {
            Books* temp = ptr->next;
            ptr->next = b;
            b->next = temp;
            return this;
        }
        else
        {
            ptr->next = b;
            return this;
        }
    }

    //метод печати: берём указатель на первый элемент 
    //    и перебирая элемменты через цикл, печатаем и суммируем для итога
    void pechat() {
        Books* ptr = this;
        int sum = 0;

        while (ptr != 0)
        {
            cout << "\n" << ptr->name << "  " << ptr->price << " " << ptr->amount;
            sum += ptr->price * ptr->amount;
            ptr = ptr->next;
        }

        cout << "\n\nСуммарная стоимость книг: "<< sum;
    }
};

int main()
{
    setlocale(LC_ALL, "ru");

    //считываем число записей
    int n;
    ifstream fileIn("input.txt");
    fileIn >> n;


    string name, authorSurname, authorInitials;
    int amount, price;

    fileIn >> name;
    fileIn >> authorSurname;
    fileIn >> authorInitials;
    fileIn >> price;
    fileIn >> amount;

    //вручную создаём объект для базы книг
    Books* baza = new Books(name, authorSurname, authorInitials, price, amount);
    
    //циклично заполняем остальные
    for (int i = 1; i < n; i++)
    {

        fileIn >> name;
        fileIn >> authorSurname;
        fileIn >> authorInitials;
        fileIn >> price;
        fileIn >> amount;

        baza = baza->dobavit(new Books(name, authorSurname, authorInitials, price, amount));
    }

    baza->pechat();
}